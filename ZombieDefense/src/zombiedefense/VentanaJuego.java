
package zombiedefense;
import java.awt.GridLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;

public class VentanaJuego extends javax.swing.JFrame {
    //Etiquetas del tablero
    public static JLabel etiqueta1,etiqueta2,etiqueta3,etiqueta4,etiqueta5,etiqueta6,etiqueta7,etiqueta8,etiqueta9,etiqueta10,etiqueta11,etiqueta12,
            etiqueta13,etiqueta14,etiqueta15,etiqueta16,etiqueta17,etiqueta18,etiqueta19,etiqueta20,etiqueta21,etiqueta22,etiqueta23,etiqueta24,
            etiqueta25,etiqueta26,etiqueta27,etiqueta28,etiqueta29,etiqueta30;
    
    //Variables que se utilizan para representar el juego
    public static JLabel[] arregloEtiquetas = new JLabel[35];
    public static JLabel[][] matrizEtiquetas = new JLabel[7][5];//Matriz Grafica
    public static Personaje[][] matrizObjetos = new Personaje[7][5];//Matriz Logica
    public static int turnos;
        
    public VentanaJuego() {
        initComponents();
        this.setLocationRelativeTo(null);
        IniciarTablero();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 945, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 847, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Metodos
    public void ActualizarMatriz(){
        for(int i = 0; i<7;i++){
            for(int j = 0;j<5;j++){
                if(matrizObjetos[i][j] instanceof Casilla){
                    Casilla elemento = (Casilla) matrizObjetos[i][j];
                    if(elemento.isObstaculizado()){
                        matrizEtiquetas[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Obstaculo.jpg")));
                    }
                    
                }
                else if(matrizObjetos[i][j] instanceof Asesino){
                   matrizEtiquetas[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/CasillaAsesino.jpg")));
                   
                }
                else if(matrizObjetos[i][j] instanceof Blindado){
                    matrizEtiquetas[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/CasillaPesado.jpg")));
                }
                else if(matrizObjetos[i][j] instanceof Chubby){
                   matrizEtiquetas[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ChubbyCasilla.jpg")));
                }
                else if(matrizObjetos[i][j] instanceof Explorador){
                   matrizEtiquetas[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/CasillaSniper.jpg")));
                }
                else if(matrizObjetos[i][j] instanceof Ghoul){
                    matrizEtiquetas[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/GhoulCasilla.jpg")));
                }
                else {
                    matrizEtiquetas[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LakelurkCasilla.jpg")));
                }
                
            }
        }
         
        
    } 
    
    
    public void IniciarTablero(){
        setLayout(new GridLayout(7,5));
        //LLenar el arreglo de todos los labels
        for(int i = 0; i<arregloEtiquetas.length;i++){
            arregloEtiquetas[i] = new JLabel();
            arregloEtiquetas[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/CasillaDefault.jpg")));
            add(arregloEtiquetas[i]);
        }
        //Llenar la matriz de etiquetas
        int e = 0;
        while(e<35){
            for(int x = 0;x<7;x++){
                for(int y = 0;y<5;y++){
                    matrizEtiquetas[x][y] = arregloEtiquetas[e];
                    e++;
                }
            }
        }
        //Inicializar la matriz de objetos poniendo todo en casillas
        for(int i = 0; i<7;i++){
            for(int j = 0;j<5;j++){
                matrizObjetos[i][j] = new Casilla(false, false, false, 0, 0, 0, 0, 0, 0);
            }
        }
        //Declaramos cual va a ser la entrada a la base
         for(int z = 0;z<5;z++){
            matrizObjetos[0][z] = new Casilla(false, false, true, 0, 0, 0, 0, 0, 0);
            matrizEtiquetas[0][z].setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Entrada.jpg"))); 
        }
        //Pruebas
        matrizObjetos[3][3] = new Casilla(true, false, false, 0, 0, 0, 0, 0, 0);
        matrizObjetos[2][2] = new Asesino(0,0,0,0,0,0);
        matrizObjetos[1][1] = new Blindado(0, true,0,0,0,0,0,0);
        matrizObjetos[5][2] = new Chubby(0,0,0,0,0,0,0);
        matrizObjetos[1][4] = new Explorador(0,0,0,0,0,0);
        matrizObjetos[3][0] = new Ghoul(0,0,0,0,0,0,0);       
        matrizObjetos[6][1] = new Lakelurk(0,0,0,0,0,0,0);
        //Llamada a Actualizar
        ActualizarMatriz();
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
